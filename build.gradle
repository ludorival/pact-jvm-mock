plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version "1.1.0"
    id 'com.palantir.git-version' version '0.15.0'
}


nexusPublishing {
    repositories {
        sonatype {
            username = findProperty("maven.username") ?: System.getenv("OSSRH_USERNAME")
            password = findProperty("maven.password") ?: System.getenv("OSSRH_GPG_SECRET_KEY_PASSWORD")
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
subprojects {

    apply {
        plugin("kotlin")
        plugin("maven-publish")
        plugin("signing")
    }

    group = "io.github.ludorival"
    version = gitVersion().replace(".dirty", "-SNAPSHOT")

    repositories {
        mavenCentral()
    }
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }
    publishing {
        publications {
            "${project.name}"(MavenPublication) {
                def name = "pact-jvm-mockk-${project.name.replace("mockk", "core")}"
                artifactId = name
                from components.java
                artifact sourceJar
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
                pom {
                    name = name
                    description = "Pact JVM Mock - Leverage existing Mocks (${project.name})"
                    url = 'https://github.com/ludorival/pact-jvm-mock'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://github.com/ludorival/pact-jvm-mock/blob/main/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'ludorival'
                            name = 'Ludovic Dorival'
                            email = 'ludorival@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/ludorival/pact-jvm-mock.git'
                        developerConnection = 'scm:git:ssh://github.com/ludorival/pact-jvm-mock.git'
                        url = 'https://github.com/ludorival/pact-jvm-mock'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "OSSRH"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty("maven.username") ?: System.getenv("OSSRH_USERNAME")
                    password = findProperty("maven.password") ?: System.getenv("OSSRH_GPG_SECRET_KEY_PASSWORD")
                }

            }
        }
    }

    signing {
        sign publishing.publications."${project.name}"
    }
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    test {
        useJUnitPlatform()
    }

}

allprojects {
    repositories {
        mavenCentral()
    }
}
project(":mockk") {

    dependencies {
        compileOnly("io.mockk:mockk:1.13.4")
        compileOnly("com.fasterxml.jackson.core:jackson-databind:2.14.2")
        compileOnly("org.slf4j:slf4j-api:2.0.5")
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        implementation "org.bitbucket.cowwoc.diff-match-patch:diff-match-patch:1.0"
    }
}

project(":spring") {
    dependencies {
        api(project(":mockk"))
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        compileOnly("org.springframework:spring-web:5.3.24")
        compileOnly("io.mockk:mockk:1.13.4")
        compileOnly("com.fasterxml.jackson.core:jackson-databind:2.14.2")

        testImplementation("io.mockk:mockk:1.13.4")
        testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.1")
        testImplementation("org.junit.jupiter:junit-jupiter-engine:5.8.1")
        testImplementation("com.fasterxml.jackson.core:jackson-databind:2.14.2")
        testImplementation("io.github.ludorival:kotlin-tdd:2.0.4.beta")
        testImplementation("org.springframework:spring-web:5.3.24")
    }
}


