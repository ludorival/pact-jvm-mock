{
  "consumer" : {
    "name" : "shopping-list"
  },
  "provider" : {
    "name" : "shopping-service"
  },
  "interactions" : [ {
    "providerStates" : [ {
      "name" : "the shopping list is empty",
      "params" : {
        "userId" : 123
      }
    } ],
    "description" : "POST /shopping-service/user/123? returns 200",
    "request" : {
      "method" : "POST",
      "path" : "/shopping-service/user/123",
      "body" : {
        "title" : "My Shopping list"
      }
    },
    "response" : {
      "body" : {
        "id" : 1,
        "title" : "My Shopping list",
        "user_id" : 123,
        "items" : [ ],
        "created_at" : "2023-01-01"
      },
      "status" : 200,
      "headers" : { },
      "matchingRules" : {
        "$.body.created_at" : {
          "match" : "type"
        }
      }
    }
  }, {
    "description" : "list two shopping lists",
    "request" : {
      "method" : "GET",
      "path" : "/shopping-service/user/123",
      "query" : "limit=30",
      "headers" : {
        "Content-Type" : "application/json",
        "Authorization" : "Bearer token123"
      },
      "matchingRules" : {
        "$.header.Authorization" : {
          "match" : "regex",
          "regex" : "Bearer .*"
        }
      }
    },
    "response" : {
      "body" : [ {
        "id" : 1,
        "title" : "My Favorite Shopping list",
        "user_id" : 123,
        "items" : [ {
          "id" : 1,
          "name" : "Apple",
          "quantity" : 2
        }, {
          "id" : 2,
          "name" : "Banana",
          "quantity" : 2
        } ],
        "created_at" : "2023-01-01"
      }, {
        "id" : 2,
        "title" : "My Shopping list to delete",
        "user_id" : 123,
        "items" : [ {
          "id" : 1,
          "name" : "Chicken",
          "quantity" : 2
        }, {
          "id" : 2,
          "name" : "Beed",
          "quantity" : 1
        } ],
        "created_at" : "2023-01-01"
      } ],
      "status" : 200,
      "headers" : { },
      "matchingRules" : {
        "$.body[*].id" : {
          "match" : "type"
        },
        "$.body[*].created_at" : {
          "match" : "type"
        }
      }
    }
  }, {
    "description" : "delete shopping item",
    "request" : {
      "method" : "DELETE",
      "path" : "/shopping-service/user/123/list/2"
    },
    "response" : {
      "status" : 200,
      "headers" : { }
    }
  }, {
    "description" : "update shopping list",
    "request" : {
      "method" : "PUT",
      "path" : "/shopping-service/user/123/list/2",
      "body" : {
        "name" : "My updated shopping list"
      }
    },
    "response" : {
      "status" : 200,
      "headers" : { }
    }
  }, {
    "description" : "GET /shopping-service/user/123/list/1? returns 200",
    "request" : {
      "method" : "GET",
      "path" : "/shopping-service/user/123/list/1"
    },
    "response" : {
      "body" : {
        "id" : 1,
        "title" : "My Favorite Shopping list",
        "user_id" : 123,
        "items" : [ {
          "id" : 1,
          "name" : "Apple",
          "quantity" : 2
        }, {
          "id" : 2,
          "name" : "Banana",
          "quantity" : 2
        } ],
        "created_at" : "2023-01-01"
      },
      "status" : 200,
      "headers" : { }
    }
  }, {
    "description" : "Patch a shopping item",
    "request" : {
      "method" : "PATCH",
      "path" : "/shopping-service/user/123/list/1",
      "body" : {
        "id" : 2,
        "name" : "Banana",
        "quantity" : 3
      }
    },
    "response" : {
      "body" : {
        "id" : 2,
        "name" : "Banana",
        "quantity" : 3
      },
      "status" : 200,
      "headers" : { }
    }
  }, {
    "providerStates" : [ {
      "name" : "The request should return a 400 Bad request"
    } ],
    "description" : "should return a 400 Bad request",
    "request" : {
      "method" : "POST",
      "path" : "/shopping-service/user/123",
      "body" : {
        "title" : "Unexpected character \\s"
      }
    },
    "response" : {
      "body" : "The title contains unexpected character",
      "status" : 400,
      "headers" : { }
    }
  }, {
    "providerStates" : [ {
      "name" : "the shopping list is empty",
      "params" : {
        "userId" : 123
      }
    } ],
    "description" : "create empty shopping list",
    "request" : {
      "method" : "POST",
      "path" : "/shopping-service/user/123",
      "body" : {
        "title" : "My Shopping list"
      }
    },
    "response" : {
      "body" : {
        "id" : 1,
        "title" : "My Shopping list",
        "user_id" : 123,
        "items" : [ ],
        "created_at" : "2023-01-01"
      },
      "status" : 200,
      "headers" : { },
      "matchingRules" : {
        "$.body.created_at" : {
          "match" : "type"
        }
      }
    }
  } ],
  "metadata" : {
    "pactSpecification" : {
      "version" : "3.0.0"
    },
    "pactJvm" : {
      "version" : "4.0.10"
    }
  }
}